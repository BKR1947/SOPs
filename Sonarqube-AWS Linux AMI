# AWS EC2 Instance Launch SOP

## Step 1: Sign in to the AWS Management Console.

## Step 2: Navigate to the EC2 service.

## Step 3: Click on the "Launch Instance" button to start the EC2 instance launch wizard.

## Step 4: Choose an Amazon Machine Image (AMI):
- In the "Quick Start" tab, search for "amzn2-ami-kernel-5.10-hvm-2.0.20230404.0-x86_64-gp2" in the search bar.
- Select the desired AMI from the search results.
- Click on the "Select" button to choose the AMI.

## Step 5: Choose an Instance Type:
- Select the desired instance type (e.g., t2.micro) for your EC2 instance.
- Click on the "Next: Configure Instance Details" button.

## Step 6: Configure Instance Details:
- In the "Network" section, choose the desired VPC and subnet for your EC2 instance.
- In the "Auto-assign Public IP" dropdown, select "Enable" to assign a public IP address to the instance.
- In the "User data" section, you can enter any custom userdata script that you want to execute during instance launch. This can include the SonarQube installation SOP that we provided earlier.
- Click on the "Next: Add Storage" button.

## Step 7: Add Storage (optional):
- Configure the storage options for your EC2 instance as per your requirements.
- Click on the "Next: Add Tags" button.

## Step 8: Add Tags (optional):
- Add any desired tags to your EC2 instance for better organization and identification.
- Click on the "Next: Configure Security Group" button.

## Step 9: Configure Security Group:
- Choose an existing security group or create a new one that allows incoming traffic on port 9000 for SonarQube. You can use the "Add Rule" button to add a new inbound rule with the following details:
  - Type: Custom TCP
  - Port Range: 9000
  - Source: 0.0.0.0/0 (to allow all public access)
- Click on the "Review and Launch" button.

## Step 10: Review Instance Launch:
- Review the configuration of your EC2 instance to ensure that everything is as per your requirements.
- Click on the "Launch" button.

## Step 11: Select an Existing Key Pair or Create a New Key Pair:
- Choose an existing key pair or create a new one that you want to use to connect to the EC2 instance via SSH.
- Click on the "Launch Instances" button.

## Step 12: Launch Status:
- Wait for the EC2 instance to launch. Once it is in the "running" state, you can retrieve the public IP address of the instance from the "Instances" view.

## Step 13: Connect to the EC2 Instance:
- Use the private key pair associated with the instance to connect to the EC2 instance via SSH using the following command:


That's it! You have now launched an EC2 instance with the specified AMI and opened port 9000 for SonarQube

============== ============== ============== ============== ============== ============== ============== ============== ============== ============== 

#!/bin/bash

# SonarQube Installation Script

# Prerequisites:
# - Linux system
# - Java OpenJDK 11 or higher
# - Sufficient system resources (RAM, CPU, storage)
# - Compatible operating system version

# Install Java OpenJDK 11
sudo amazon-linux-extras install java-openjdk11 -y

# Verify Java installation
java -version

# Change directory to /opt/
cd /opt/

# Download SonarQube package
wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.9.10.61524.zip

# Unzip the SonarQube package
unzip sonarqube-8.9.10.61524.zip

# Rename the extracted directory to "sonar"
mv sonarqube-8.9.10.61524 sonar

# Change directory to sonar/bin
cd sonar/bin

# Change directory to linux-x86-64
cd linux-x86-64

# Go back to sonar/bin directory
cd ..

# Change directory to conf
cd conf

# Open the sonar.properties file
cat sonar.properties

# Go back to the parent directory
cd ..

# Create a new user for SonarQube
useradd sonar

# Set a password for the sonar user
passwd sonar

# Change ownership of the SonarQube directory to the sonar user
chown -R sonar:sonar sonar/

# Change directory to sonar
cd sonar

# Change directory to bin
cd bin

# Change directory to linux-x86-64
cd linux-x86-64

# Open the sonar.sh file for editing
vi sonar.sh

# Replace RUN_AS_USER with sonar in sonar.sh file
RUN_AS_USER=sonar
(note: remove # from the beginning of the line to uncomment)

# Start SonarQube
sh sonar.sh start

# Check the status of SonarQube
sh sonar.sh status

============== ============== ============== ============== ============== ============== ============== ============== ============== ==============
